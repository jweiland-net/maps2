{"version":3,"sources":["OpenStreetMap2.js"],"names":["__assign","this","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","OpenStreetMap2","element","environment","lng","allMarkers","categorizedMarkers","bounds","L","LatLngBounds","extConf","defaultLatitude","defaultLongitude","poiCollections","JSON","parse","getAttribute","editable","classList","contains","setWidthAndHeight","createMap","lat","parseFloat","isNaN","createMarkerByLatLng","createPointByCollectionType","countObjectProperties","showSwitchableCategories","settings","forceZoom","collectionType","map","fitBounds","panTo","latitude","longitude","height","String","mapHeight","width","canBeInterpretedAsNumber","mapWidth","style","center","getExtConf","zoom","getSettings","scrollWheelZoom","activateScrollWheel","tileLayer","mapTile","attribution","mapTileAttribution","maxZoom","addTo","groupCategories","categoryUid","groupedCategories","x","y","categories","uid","inList","getCategoriesOfCheckboxesWithStatus","form","isChecked","querySelectorAll","forEach","checkbox","push","parseInt","value","getMarkersToChangeVisibilityFor","markers","marker","allCategoriesOfMarker","categoriesOfCheckboxesWithStatus","poiCollection","markerCategoryHasCheckboxWithStatus","j","k","_a","_this","document","createElement","add","setAttribute","contentRecord","appendChild","getCheckbox","querySelector","insertAdjacentHTML","concat","title","addEventListener","checked","addLayer","removeLayer","insertAdjacentElement","category","div","innerHTML","obj","key","count","strokeColor","strokeOpacity","createMarker","createArea","createRoute","createRadius","c","extend","getLatLng","list","item","indexOf","icon","draggable","markerIcon","iconUrl","iconSize","markerIconWidth","markerIconHeight","iconAnchor","markerIconAnchorPosX","markerIconAnchorPosY","setIcon","addEditListeners","addInfoWindow","latlngs","pois","latLng","polygon","color","opacity","weight","strokeWeight","fillColor","fillOpacity","polyline","circle","radius","getBounds","fetch","ajaxUrl","method","headers","Content-Type","body","stringify","then","response","json","data","bindPopup","content","openPopup","catch","error","console","mapContainer","on","_b","toFixed","previousElementSibling","event","setLatLng","latlng","Number","maps2OpenStreetMaps","dataset","override"],"mappings":"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","file":"OpenStreetMap2.min.js","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar OpenStreetMap2 = /** @class */ (function () {\n    function OpenStreetMap2(element, environment) {\n        this.element = element;\n        this.environment = environment;\n        this.allMarkers = [];\n        this.categorizedMarkers = {};\n        this.bounds = new L.LatLngBounds([\n            [environment.extConf.defaultLatitude, environment.extConf.defaultLongitude]\n        ]);\n        this.poiCollections = JSON.parse(this.element.getAttribute(\"data-pois\") || \"[]\");\n        this.editable = this.element.classList.contains(\"editMarker\");\n        this.setWidthAndHeight();\n        this.createMap();\n        if (typeof this.poiCollections === \"undefined\" || this.poiCollections.length === 0) {\n            // Plugin: CityMap\n            var lat = parseFloat(this.element.getAttribute(\"data-latitude\") || \"\");\n            var lng = parseFloat(this.element.getAttribute(\"data-longitude\") || \"\");\n            if (!isNaN(lat) && !isNaN(lng)) {\n                this.createMarkerByLatLng(lat, lng);\n            }\n        }\n        else {\n            this.createPointByCollectionType(environment);\n            if (this.countObjectProperties(this.categorizedMarkers) > 1) {\n                this.showSwitchableCategories(environment);\n            }\n            if (environment.settings.forceZoom === false\n                && (this.poiCollections.length > 1\n                    || (this.poiCollections.length === 1\n                        && (this.poiCollections[0].collectionType === \"Area\"\n                            || this.poiCollections[0].collectionType === \"Route\")))) {\n                this.map.fitBounds(this.bounds);\n            }\n            else {\n                this.map.panTo([this.poiCollections[0].latitude, this.poiCollections[0].longitude]);\n            }\n        }\n    }\n    OpenStreetMap2.prototype.setWidthAndHeight = function () {\n        var height = String(this.environment.settings.mapHeight);\n        if (this.canBeInterpretedAsNumber(height)) {\n            height += \"px\";\n        }\n        var width = String(this.environment.settings.mapWidth);\n        if (this.canBeInterpretedAsNumber(width)) {\n            width += \"px\";\n        }\n        this.element.style.height = height;\n        this.element.style.width = width;\n    };\n    OpenStreetMap2.prototype.createMap = function () {\n        this.map = L.map(this.element, {\n            center: [this.getExtConf().defaultLatitude, this.getExtConf().defaultLongitude],\n            zoom: this.getSettings().zoom ? this.getSettings().zoom : 12,\n            editable: this.editable,\n            scrollWheelZoom: this.getSettings().activateScrollWheel !== \"0\"\n        });\n        L.tileLayer(this.getSettings().mapTile, {\n            attribution: this.getSettings().mapTileAttribution,\n            maxZoom: 20\n        }).addTo(this.map);\n    };\n    OpenStreetMap2.prototype.groupCategories = function (environment) {\n        var me = this;\n        var groupedCategories = {};\n        var categoryUid = \"0\";\n        for (var x = 0; x < this.poiCollections.length; x++) {\n            for (var y = 0; y < this.poiCollections[x].categories.length; y++) {\n                categoryUid = String(this.poiCollections[x].categories[y].uid);\n                if (this.inList(environment.settings.categories, categoryUid) > -1 && !groupedCategories.hasOwnProperty(categoryUid)) {\n                    groupedCategories[categoryUid] = this.poiCollections[x].categories[y];\n                }\n            }\n        }\n        return groupedCategories;\n    };\n    OpenStreetMap2.prototype.getCategoriesOfCheckboxesWithStatus = function (form, isChecked) {\n        var categories = [];\n        var checkboxes = isChecked ? form.querySelectorAll(\"input:checked\") : form.querySelectorAll(\"input:not(:checked)\");\n        checkboxes.forEach(function (checkbox) {\n            categories.push(parseInt(checkbox.value));\n        });\n        return categories;\n    };\n    OpenStreetMap2.prototype.getMarkersToChangeVisibilityFor = function (categoryUid, form, isChecked) {\n        var markers = [];\n        if (this.allMarkers.length === 0) {\n            return markers;\n        }\n        var marker = null;\n        var allCategoriesOfMarker = null;\n        var categoriesOfCheckboxesWithStatus = this.getCategoriesOfCheckboxesWithStatus(form, isChecked);\n        for (var i = 0; i < this.allMarkers.length; i++) {\n            marker = this.allMarkers[i];\n            allCategoriesOfMarker = marker.poiCollection.categories;\n            if (allCategoriesOfMarker.length === 0) {\n                continue;\n            }\n            var markerCategoryHasCheckboxWithStatus = void 0;\n            for (var j = 0; j < allCategoriesOfMarker.length; j++) {\n                markerCategoryHasCheckboxWithStatus = false;\n                for (var k = 0; k < categoriesOfCheckboxesWithStatus.length; k++) {\n                    if (allCategoriesOfMarker[j].uid === categoriesOfCheckboxesWithStatus[k]) {\n                        markerCategoryHasCheckboxWithStatus = true;\n                    }\n                }\n                if (markerCategoryHasCheckboxWithStatus === isChecked) {\n                    break;\n                }\n            }\n            if (markerCategoryHasCheckboxWithStatus) {\n                markers.push(marker.marker);\n            }\n        }\n        return markers;\n    };\n    OpenStreetMap2.prototype.showSwitchableCategories = function (environment) {\n        var _this = this;\n        var _a;\n        var categories = this.groupCategories(environment);\n        var form = document.createElement(\"form\");\n        form.classList.add(\"txMaps2Form\");\n        form.setAttribute(\"id\", \"txMaps2Form-\" + environment.contentRecord.uid);\n        // Add checkbox for category\n        for (var categoryUid in categories) {\n            if (categories.hasOwnProperty(categoryUid)) {\n                form.appendChild(this.getCheckbox(categories[categoryUid]));\n                (_a = form.querySelector(\"#checkCategory_\" + categoryUid)) === null || _a === void 0 ? void 0 : _a.insertAdjacentHTML(\"afterend\", \"<span class=\\\"map-category\\\">\".concat(categories[categoryUid].title, \"</span>\"));\n            }\n        }\n        // Add listener for checkboxes\n        form.querySelectorAll(\"input\").forEach(function (checkbox) {\n            checkbox.addEventListener(\"click\", function () {\n                var isChecked = checkbox.checked;\n                var categoryUid = checkbox.value;\n                var markers = _this.getMarkersToChangeVisibilityFor(categoryUid, form, isChecked);\n                markers.forEach(function (marker) {\n                    if (isChecked) {\n                        _this.map.addLayer(marker);\n                    }\n                    else {\n                        _this.map.removeLayer(marker);\n                    }\n                });\n            });\n        });\n        this.element.insertAdjacentElement(\"afterend\", form);\n    };\n    OpenStreetMap2.prototype.getCheckbox = function (category) {\n        var div = document.createElement(\"div\");\n        div.classList.add(\"form-group\");\n        div.innerHTML = \"\\n            <div class=\\\"checkbox\\\">\\n                <label>\\n                    <input type=\\\"checkbox\\\" class=\\\"checkCategory\\\" id=\\\"checkCategory_\".concat(category.uid, \"\\\" checked=\\\"checked\\\" value=\\\"\").concat(category.uid, \"\\\">\\n                </label>\\n            </div>\");\n        return div;\n    };\n    OpenStreetMap2.prototype.countObjectProperties = function (obj) {\n        var count = 0;\n        for (var key in obj) {\n            if (obj.hasOwnProperty(key)) {\n                count++;\n            }\n        }\n        return count;\n    };\n    OpenStreetMap2.prototype.createPointByCollectionType = function (environment) {\n        var marker;\n        var categoryUid = 0;\n        for (var i = 0; i < this.poiCollections.length; i++) {\n            if (this.poiCollections[i].strokeColor === \"\") {\n                this.poiCollections[i].strokeColor = environment.extConf.strokeColor;\n            }\n            if (this.poiCollections[i].strokeOpacity === \"\") {\n                this.poiCollections[i].strokeOpacity = environment.extConf.strokeOpacity;\n            }\n            // ... (similar updates for other properties)\n            marker = null;\n            switch (this.poiCollections[i].collectionType) {\n                case \"Point\":\n                    marker = this.createMarker(this.poiCollections[i], environment);\n                    break;\n                case \"Area\":\n                    marker = this.createArea(this.poiCollections[i], environment);\n                    break;\n                case \"Route\":\n                    marker = this.createRoute(this.poiCollections[i], environment);\n                    break;\n                case \"Radius\":\n                    marker = this.createRadius(this.poiCollections[i], environment);\n                    break;\n            }\n            this.allMarkers.push({\n                marker: marker,\n                poiCollection: this.poiCollections[i]\n            });\n            categoryUid = 0;\n            for (var c = 0; c < this.poiCollections[i].categories.length; c++) {\n                categoryUid = this.poiCollections[i].categories[c].uid;\n                if (!this.categorizedMarkers.hasOwnProperty(categoryUid)) {\n                    this.categorizedMarkers[categoryUid] = [];\n                }\n                this.categorizedMarkers[categoryUid].push(marker);\n            }\n        }\n    };\n    OpenStreetMap2.prototype.createMarkerByLatLng = function (latitude, longitude) {\n        var marker = L.marker([latitude, longitude]).addTo(this.map);\n        this.bounds.extend(marker.getLatLng());\n    };\n    OpenStreetMap2.prototype.inList = function (list, item) {\n        var catSearch = ',' + list + ',';\n        item = ',' + item + ',';\n        return catSearch.indexOf(item);\n    };\n    OpenStreetMap2.prototype.createMarker = function (poiCollection, environment) {\n        var marker = L.marker([poiCollection.latitude, poiCollection.longitude], {\n            'draggable': this.editable\n        }).addTo(this.map);\n        if (poiCollection.hasOwnProperty(\"markerIcon\") && poiCollection.markerIcon !== \"\") {\n            var icon = L.icon({\n                iconUrl: poiCollection.markerIcon,\n                iconSize: [poiCollection.markerIconWidth, poiCollection.markerIconHeight],\n                iconAnchor: [poiCollection.markerIconAnchorPosX, poiCollection.markerIconAnchorPosY]\n            });\n            marker.setIcon(icon);\n        }\n        this.bounds.extend(marker.getLatLng());\n        if (this.editable) {\n            this.addEditListeners(this.element, marker, poiCollection, environment);\n        }\n        else {\n            this.addInfoWindow(marker, poiCollection, environment);\n        }\n        return marker;\n    };\n    OpenStreetMap2.prototype.createArea = function (poiCollection, environment) {\n        var latlngs = [];\n        for (var i = 0; i < poiCollection.pois.length; i++) {\n            var latLng = [poiCollection.pois[i].latitude, poiCollection.pois[i].longitude];\n            this.bounds.extend(latLng);\n            latlngs.push(latLng);\n        }\n        var marker = L.polygon(latlngs, {\n            color: poiCollection.strokeColor,\n            opacity: poiCollection.strokeOpacity,\n            weight: poiCollection.strokeWeight,\n            fillColor: poiCollection.fillColor,\n            fillOpacity: poiCollection.fillOpacity\n        }).addTo(this.map);\n        this.addInfoWindow(marker, poiCollection, environment);\n        return marker;\n    };\n    OpenStreetMap2.prototype.createRoute = function (poiCollection, environment) {\n        var latlngs = [];\n        for (var i = 0; i < poiCollection.pois.length; i++) {\n            var latLng = [poiCollection.pois[i].latitude, poiCollection.pois[i].longitude];\n            this.bounds.extend(latLng);\n            latlngs.push(latLng);\n        }\n        var marker = L.polyline(latlngs, {\n            color: poiCollection.strokeColor,\n            opacity: poiCollection.strokeOpacity,\n            weight: poiCollection.strokeWeight,\n            fillColor: poiCollection.fillColor,\n            fillOpacity: poiCollection.fillOpacity\n        }).addTo(this.map);\n        this.addInfoWindow(marker, poiCollection, environment);\n        return marker;\n    };\n    OpenStreetMap2.prototype.createRadius = function (poiCollection, environment) {\n        var marker = L.circle([poiCollection.latitude, poiCollection.longitude], {\n            color: poiCollection.strokeColor,\n            opacity: poiCollection.strokeOpacity,\n            weight: poiCollection.strokeWeight,\n            fillColor: poiCollection.fillColor,\n            fillOpacity: poiCollection.fillOpacity,\n            radius: poiCollection.radius\n        }).addTo(this.map);\n        this.bounds.extend(marker.getBounds());\n        this.addInfoWindow(marker, poiCollection, environment);\n        return marker;\n    };\n    OpenStreetMap2.prototype.addInfoWindow = function (element, poiCollection, environment) {\n        element.addEventListener(\"click\", function () {\n            fetch(environment.ajaxUrl, {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify({\n                    poiCollection: poiCollection.uid\n                })\n            })\n                .then(function (response) { return response.json(); })\n                .then(function (data) {\n                element.bindPopup(data.content).openPopup();\n            })\n                .catch(function (error) { return console.error('Error:', error); });\n        });\n    };\n    OpenStreetMap2.prototype.addEditListeners = function (mapContainer, marker, poiCollection, environment) {\n        marker.on('dragend', function () {\n            var _a, _b;\n            var lat = marker.getLatLng().lat.toFixed(6);\n            var lng = marker.getLatLng().lng.toFixed(6);\n            (_a = mapContainer\n                .previousElementSibling) === null || _a === void 0 ? void 0 : _a.querySelector(\"input.latitude-\".concat(environment.contentRecord.uid)).setAttribute(\"value\", lat);\n            (_b = mapContainer\n                .previousElementSibling) === null || _b === void 0 ? void 0 : _b.querySelector(\"input.longitude-\".concat(environment.contentRecord.uid)).setAttribute(\"value\", lng);\n        });\n        this.map.on('click', function (event) {\n            var _a, _b;\n            marker.setLatLng(event.latlng);\n            (_a = mapContainer\n                .previousElementSibling) === null || _a === void 0 ? void 0 : _a.querySelector(\"input.latitude-\".concat(environment.contentRecord.uid)).setAttribute(\"value\", event.latlng.lat.toFixed(6));\n            (_b = mapContainer\n                .previousElementSibling) === null || _b === void 0 ? void 0 : _b.querySelector(\"input.longitude-\".concat(environment.contentRecord.uid)).setAttribute(\"value\", event.latlng.lng.toFixed(6));\n        });\n    };\n    OpenStreetMap2.prototype.canBeInterpretedAsNumber = function (value) {\n        return typeof value === 'number' || !isNaN(Number(value));\n    };\n    OpenStreetMap2.prototype.getExtConf = function () {\n        return this.environment.extConf;\n    };\n    OpenStreetMap2.prototype.getSettings = function () {\n        return this.environment.settings;\n    };\n    return OpenStreetMap2;\n}());\nvar maps2OpenStreetMaps = [];\ndocument.querySelectorAll(\".maps2\").forEach(function (element) {\n    var environment = typeof element.dataset.environment !== 'undefined' ? element.dataset.environment : '{}';\n    var override = typeof element.dataset.override !== 'undefined' ? element.dataset.override : '{}';\n    maps2OpenStreetMaps.push(new OpenStreetMap2(element, __assign(__assign({}, JSON.parse(environment)), JSON.parse(override))));\n});\n"]}