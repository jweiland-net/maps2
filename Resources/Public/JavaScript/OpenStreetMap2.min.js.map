{"version":3,"sources":["OpenStreetMap2.js"],"names":["__assign","this","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","OpenStreetMap2","element","environment","allMarkers","categorizedMarkers","bounds","L","LatLngBounds","extConf","defaultLatitude","defaultLongitude","editable","classList","contains","preparePoisCollections","setWidthAndHeight","createMap","mainProcess","poiCollections","JSON","parse","getAttribute","isPOICollectionsEmpty","createMarkerBasedOnDataAttributes","createMarkerBasedOnPOICollections","latitude","getAttributeAsFloat","longitude","isNaN","createMarkerByLatLng","attributeName","parseFloat","createPointByCollectionType","countObjectProperties","showSwitchableCategories","adjustMapZoom","shouldFitBounds","map","fitBounds","panTo","settings","forceZoom","collectionType","style","height","normalizeDimension","mapHeight","width","mapWidth","dimension","normalizedDimension","String","canBeInterpretedAsNumber","center","getExtConf","zoom","getSettings","scrollWheelZoom","activateScrollWheel","tileLayer","mapTile","attribution","mapTileAttribution","maxZoom","addTo","groupCategories","categoryUid","groupedCategories","x","y","categories","uid","inList","getCategoriesOfCheckboxesWithStatus","form","isChecked","querySelectorAll","forEach","checkbox","push","parseInt","value","getMarkersToChangeVisibilityFor","markers","marker","allCategoriesOfMarker","categoriesOfCheckboxesWithStatus","poiCollection","markerCategoryHasCheckboxWithStatus","j","k","_a","_this","document","createElement","add","setAttribute","contentRecord","appendChild","getCheckbox","querySelector","insertAdjacentHTML","concat","title","addEventListener","checked","addLayer","removeLayer","insertAdjacentElement","category","div","innerHTML","obj","key","count","strokeColor","strokeOpacity","createMarker","createArea","createRoute","createRadius","c","extend","getLatLng","list","item","indexOf","icon","draggable","markerIcon","iconUrl","iconSize","markerIconWidth","markerIconHeight","iconAnchor","markerIconAnchorPosX","markerIconAnchorPosY","setIcon","addEditListeners","addInfoWindow","latlngs","pois","latLng","polygon","color","opacity","weight","strokeWeight","fillColor","fillOpacity","polyline","circle","radius","getBounds","fetch","ajaxUrl","method","headers","Content-Type","body","stringify","then","response","json","data","bindPopup","content","openPopup","catch","error","console","mapContainer","on","_b","lat","toFixed","lng","previousElementSibling","event","setLatLng","latlng","Number","maps2OpenStreetMaps","dataset","override"],"mappings":"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","file":"OpenStreetMap2.min.js","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar OpenStreetMap2 = /** @class */ (function () {\n    function OpenStreetMap2(element, environment) {\n        this.element = element;\n        this.environment = environment;\n        this.allMarkers = [];\n        this.categorizedMarkers = {};\n        this.bounds = new L.LatLngBounds([\n            [environment.extConf.defaultLatitude, environment.extConf.defaultLongitude]\n        ]);\n        this.editable = this.element.classList.contains(\"editMarker\");\n        this.preparePoisCollections();\n        this.editable = this.element.classList.contains(\"editMarker\");\n        this.setWidthAndHeight();\n        this.createMap();\n        this.mainProcess();\n    }\n    OpenStreetMap2.prototype.preparePoisCollections = function () {\n        this.poiCollections = JSON.parse(this.element.getAttribute(\"data-pois\") || '[]');\n    };\n    OpenStreetMap2.prototype.mainProcess = function () {\n        if (this.isPOICollectionsEmpty()) {\n            this.createMarkerBasedOnDataAttributes();\n        }\n        else {\n            this.createMarkerBasedOnPOICollections();\n        }\n    };\n    OpenStreetMap2.prototype.isPOICollectionsEmpty = function () {\n        return this.poiCollections === \"undefined\" || this.poiCollections.length === 0;\n    };\n    OpenStreetMap2.prototype.createMarkerBasedOnDataAttributes = function () {\n        var latitude = this.getAttributeAsFloat(\"data-latitude\");\n        var longitude = this.getAttributeAsFloat(\"data-longitude\");\n        if (!isNaN(latitude) && !isNaN(longitude)) {\n            this.createMarkerByLatLng(latitude, longitude);\n        }\n    };\n    OpenStreetMap2.prototype.getAttributeAsFloat = function (attributeName) {\n        return parseFloat(this.element.getAttribute(attributeName) || \"\");\n    };\n    OpenStreetMap2.prototype.createMarkerBasedOnPOICollections = function () {\n        this.createPointByCollectionType(this.environment);\n        if (this.countObjectProperties(this.categorizedMarkers) > 1) {\n            this.showSwitchableCategories(this.environment);\n        }\n        this.adjustMapZoom();\n    };\n    OpenStreetMap2.prototype.adjustMapZoom = function () {\n        if (this.shouldFitBounds()) {\n            this.map.fitBounds(this.bounds);\n        }\n        else {\n            this.map.panTo([this.poiCollections[0].latitude, this.poiCollections[0].longitude]);\n        }\n    };\n    OpenStreetMap2.prototype.shouldFitBounds = function () {\n        return this.environment.settings.forceZoom === false\n            && (this.poiCollections.length > 1\n                || (this.poiCollections.length === 1\n                    && (this.poiCollections[0].collectionType === \"Area\"\n                        || this.poiCollections[0].collectionType === \"Route\")));\n    };\n    OpenStreetMap2.prototype.setWidthAndHeight = function () {\n        this.element.style.height = this.normalizeDimension(this.environment.settings.mapHeight);\n        this.element.style.width = this.normalizeDimension(this.environment.settings.mapWidth);\n    };\n    OpenStreetMap2.prototype.normalizeDimension = function (dimension) {\n        var normalizedDimension = String(dimension);\n        if (this.canBeInterpretedAsNumber(normalizedDimension)) {\n            normalizedDimension += 'px';\n        }\n        return normalizedDimension;\n    };\n    OpenStreetMap2.prototype.createMap = function () {\n        this.map = L.map(this.element, {\n            center: [this.getExtConf().defaultLatitude, this.getExtConf().defaultLongitude],\n            zoom: this.getSettings().zoom ? this.getSettings().zoom : 12,\n            editable: this.editable,\n            scrollWheelZoom: this.getSettings().activateScrollWheel !== \"0\"\n        });\n        L.tileLayer(this.getSettings().mapTile, {\n            attribution: this.getSettings().mapTileAttribution,\n            maxZoom: 20\n        }).addTo(this.map);\n    };\n    OpenStreetMap2.prototype.groupCategories = function (environment) {\n        var me = this;\n        var groupedCategories = {};\n        var categoryUid = \"0\";\n        for (var x = 0; x < this.poiCollections.length; x++) {\n            for (var y = 0; y < this.poiCollections[x].categories.length; y++) {\n                categoryUid = String(this.poiCollections[x].categories[y].uid);\n                if (this.inList(environment.settings.categories, categoryUid) > -1 && !groupedCategories.hasOwnProperty(categoryUid)) {\n                    groupedCategories[categoryUid] = this.poiCollections[x].categories[y];\n                }\n            }\n        }\n        return groupedCategories;\n    };\n    OpenStreetMap2.prototype.getCategoriesOfCheckboxesWithStatus = function (form, isChecked) {\n        var categories = [];\n        var checkboxes = isChecked ? form.querySelectorAll(\"input:checked\") : form.querySelectorAll(\"input:not(:checked)\");\n        checkboxes.forEach(function (checkbox) {\n            categories.push(parseInt(checkbox.value));\n        });\n        return categories;\n    };\n    OpenStreetMap2.prototype.getMarkersToChangeVisibilityFor = function (categoryUid, form, isChecked) {\n        var markers = [];\n        if (this.allMarkers.length === 0) {\n            return markers;\n        }\n        var marker = null;\n        var allCategoriesOfMarker = null;\n        var categoriesOfCheckboxesWithStatus = this.getCategoriesOfCheckboxesWithStatus(form, isChecked);\n        for (var i = 0; i < this.allMarkers.length; i++) {\n            marker = this.allMarkers[i];\n            allCategoriesOfMarker = marker.poiCollection.categories;\n            if (allCategoriesOfMarker.length === 0) {\n                continue;\n            }\n            var markerCategoryHasCheckboxWithStatus = void 0;\n            for (var j = 0; j < allCategoriesOfMarker.length; j++) {\n                markerCategoryHasCheckboxWithStatus = false;\n                for (var k = 0; k < categoriesOfCheckboxesWithStatus.length; k++) {\n                    if (allCategoriesOfMarker[j].uid === categoriesOfCheckboxesWithStatus[k]) {\n                        markerCategoryHasCheckboxWithStatus = true;\n                    }\n                }\n                if (markerCategoryHasCheckboxWithStatus === isChecked) {\n                    break;\n                }\n            }\n            if (markerCategoryHasCheckboxWithStatus) {\n                markers.push(marker.marker);\n            }\n        }\n        return markers;\n    };\n    OpenStreetMap2.prototype.showSwitchableCategories = function (environment) {\n        var _this = this;\n        var _a;\n        var categories = this.groupCategories(environment);\n        var form = document.createElement(\"form\");\n        form.classList.add(\"txMaps2Form\");\n        form.setAttribute(\"id\", \"txMaps2Form-\" + environment.contentRecord.uid);\n        // Add checkbox for category\n        for (var categoryUid in categories) {\n            if (categories.hasOwnProperty(categoryUid)) {\n                form.appendChild(this.getCheckbox(categories[categoryUid]));\n                (_a = form.querySelector(\"#checkCategory_\" + categoryUid)) === null || _a === void 0 ? void 0 : _a.insertAdjacentHTML(\"afterend\", \"<span class=\\\"map-category\\\">\".concat(categories[categoryUid].title, \"</span>\"));\n            }\n        }\n        // Add listener for checkboxes\n        form.querySelectorAll(\"input\").forEach(function (checkbox) {\n            checkbox.addEventListener(\"click\", function () {\n                var isChecked = checkbox.checked;\n                var categoryUid = checkbox.value;\n                var markers = _this.getMarkersToChangeVisibilityFor(categoryUid, form, isChecked);\n                markers.forEach(function (marker) {\n                    if (isChecked) {\n                        _this.map.addLayer(marker);\n                    }\n                    else {\n                        _this.map.removeLayer(marker);\n                    }\n                });\n            });\n        });\n        this.element.insertAdjacentElement(\"afterend\", form);\n    };\n    OpenStreetMap2.prototype.getCheckbox = function (category) {\n        var div = document.createElement(\"div\");\n        div.classList.add(\"form-group\");\n        div.innerHTML = \"\\n            <div class=\\\"checkbox\\\">\\n                <label>\\n                    <input type=\\\"checkbox\\\" class=\\\"checkCategory\\\" id=\\\"checkCategory_\".concat(category.uid, \"\\\" checked=\\\"checked\\\" value=\\\"\").concat(category.uid, \"\\\">\\n                </label>\\n            </div>\");\n        return div;\n    };\n    OpenStreetMap2.prototype.countObjectProperties = function (obj) {\n        var count = 0;\n        for (var key in obj) {\n            if (obj.hasOwnProperty(key)) {\n                count++;\n            }\n        }\n        return count;\n    };\n    OpenStreetMap2.prototype.createPointByCollectionType = function (environment) {\n        var marker;\n        var categoryUid = 0;\n        for (var i = 0; i < this.poiCollections.length; i++) {\n            if (this.poiCollections[i].strokeColor === \"\") {\n                this.poiCollections[i].strokeColor = environment.extConf.strokeColor;\n            }\n            if (this.poiCollections[i].strokeOpacity === \"\") {\n                this.poiCollections[i].strokeOpacity = environment.extConf.strokeOpacity;\n            }\n            // ... (similar updates for other properties)\n            marker = null;\n            switch (this.poiCollections[i].collectionType) {\n                case \"Point\":\n                    marker = this.createMarker(this.poiCollections[i], environment);\n                    break;\n                case \"Area\":\n                    marker = this.createArea(this.poiCollections[i], environment);\n                    break;\n                case \"Route\":\n                    marker = this.createRoute(this.poiCollections[i], environment);\n                    break;\n                case \"Radius\":\n                    marker = this.createRadius(this.poiCollections[i], environment);\n                    break;\n            }\n            this.allMarkers.push({\n                marker: marker,\n                poiCollection: this.poiCollections[i]\n            });\n            categoryUid = 0;\n            for (var c = 0; c < this.poiCollections[i].categories.length; c++) {\n                categoryUid = this.poiCollections[i].categories[c].uid;\n                if (!this.categorizedMarkers.hasOwnProperty(categoryUid)) {\n                    this.categorizedMarkers[categoryUid] = [];\n                }\n                this.categorizedMarkers[categoryUid].push(marker);\n            }\n        }\n    };\n    OpenStreetMap2.prototype.createMarkerByLatLng = function (latitude, longitude) {\n        var marker = L.marker([latitude, longitude]).addTo(this.map);\n        this.bounds.extend(marker.getLatLng());\n    };\n    OpenStreetMap2.prototype.inList = function (list, item) {\n        var catSearch = ',' + list + ',';\n        item = ',' + item + ',';\n        return catSearch.indexOf(item);\n    };\n    OpenStreetMap2.prototype.createMarker = function (poiCollection, environment) {\n        var marker = L.marker([poiCollection.latitude, poiCollection.longitude], {\n            'draggable': this.editable\n        }).addTo(this.map);\n        if (poiCollection.hasOwnProperty(\"markerIcon\") && poiCollection.markerIcon !== \"\") {\n            var icon = L.icon({\n                iconUrl: poiCollection.markerIcon,\n                iconSize: [poiCollection.markerIconWidth, poiCollection.markerIconHeight],\n                iconAnchor: [poiCollection.markerIconAnchorPosX, poiCollection.markerIconAnchorPosY]\n            });\n            marker.setIcon(icon);\n        }\n        this.bounds.extend(marker.getLatLng());\n        if (this.editable) {\n            this.addEditListeners(this.element, marker, poiCollection, environment);\n        }\n        else {\n            this.addInfoWindow(marker, poiCollection, environment);\n        }\n        return marker;\n    };\n    OpenStreetMap2.prototype.createArea = function (poiCollection, environment) {\n        var latlngs = [];\n        for (var i = 0; i < poiCollection.pois.length; i++) {\n            var latLng = [poiCollection.pois[i].latitude, poiCollection.pois[i].longitude];\n            this.bounds.extend(latLng);\n            latlngs.push(latLng);\n        }\n        var marker = L.polygon(latlngs, {\n            color: poiCollection.strokeColor,\n            opacity: poiCollection.strokeOpacity,\n            weight: poiCollection.strokeWeight,\n            fillColor: poiCollection.fillColor,\n            fillOpacity: poiCollection.fillOpacity\n        }).addTo(this.map);\n        this.addInfoWindow(marker, poiCollection, environment);\n        return marker;\n    };\n    OpenStreetMap2.prototype.createRoute = function (poiCollection, environment) {\n        var latlngs = [];\n        for (var i = 0; i < poiCollection.pois.length; i++) {\n            var latLng = [poiCollection.pois[i].latitude, poiCollection.pois[i].longitude];\n            this.bounds.extend(latLng);\n            latlngs.push(latLng);\n        }\n        var marker = L.polyline(latlngs, {\n            color: poiCollection.strokeColor,\n            opacity: poiCollection.strokeOpacity,\n            weight: poiCollection.strokeWeight,\n            fillColor: poiCollection.fillColor,\n            fillOpacity: poiCollection.fillOpacity\n        }).addTo(this.map);\n        this.addInfoWindow(marker, poiCollection, environment);\n        return marker;\n    };\n    OpenStreetMap2.prototype.createRadius = function (poiCollection, environment) {\n        var marker = L.circle([poiCollection.latitude, poiCollection.longitude], {\n            color: poiCollection.strokeColor,\n            opacity: poiCollection.strokeOpacity,\n            weight: poiCollection.strokeWeight,\n            fillColor: poiCollection.fillColor,\n            fillOpacity: poiCollection.fillOpacity,\n            radius: poiCollection.radius\n        }).addTo(this.map);\n        this.bounds.extend(marker.getBounds());\n        this.addInfoWindow(marker, poiCollection, environment);\n        return marker;\n    };\n    OpenStreetMap2.prototype.addInfoWindow = function (element, poiCollection, environment) {\n        element.addEventListener(\"click\", function () {\n            fetch(environment.ajaxUrl, {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify({\n                    poiCollection: poiCollection.uid\n                })\n            })\n                .then(function (response) { return response.json(); })\n                .then(function (data) {\n                element.bindPopup(data.content).openPopup();\n            })\n                .catch(function (error) { return console.error('Error:', error); });\n        });\n    };\n    OpenStreetMap2.prototype.addEditListeners = function (mapContainer, marker, poiCollection, environment) {\n        marker.on('dragend', function () {\n            var _a, _b;\n            var lat = marker.getLatLng().lat.toFixed(6);\n            var lng = marker.getLatLng().lng.toFixed(6);\n            (_a = mapContainer\n                .previousElementSibling) === null || _a === void 0 ? void 0 : _a.querySelector(\"input.latitude-\".concat(environment.contentRecord.uid)).setAttribute(\"value\", lat);\n            (_b = mapContainer\n                .previousElementSibling) === null || _b === void 0 ? void 0 : _b.querySelector(\"input.longitude-\".concat(environment.contentRecord.uid)).setAttribute(\"value\", lng);\n        });\n        this.map.on('click', function (event) {\n            var _a, _b;\n            marker.setLatLng(event.latlng);\n            (_a = mapContainer\n                .previousElementSibling) === null || _a === void 0 ? void 0 : _a.querySelector(\"input.latitude-\".concat(environment.contentRecord.uid)).setAttribute(\"value\", event.latlng.lat.toFixed(6));\n            (_b = mapContainer\n                .previousElementSibling) === null || _b === void 0 ? void 0 : _b.querySelector(\"input.longitude-\".concat(environment.contentRecord.uid)).setAttribute(\"value\", event.latlng.lng.toFixed(6));\n        });\n    };\n    OpenStreetMap2.prototype.canBeInterpretedAsNumber = function (value) {\n        return typeof value === 'number' || !isNaN(Number(value));\n    };\n    OpenStreetMap2.prototype.getExtConf = function () {\n        return this.environment.extConf;\n    };\n    OpenStreetMap2.prototype.getSettings = function () {\n        return this.environment.settings;\n    };\n    return OpenStreetMap2;\n}());\nvar maps2OpenStreetMaps = [];\ndocument.querySelectorAll(\".maps2\").forEach(function (element) {\n    var environment = typeof element.dataset.environment !== 'undefined' ? element.dataset.environment : '{}';\n    var override = typeof element.dataset.override !== 'undefined' ? element.dataset.override : '{}';\n    maps2OpenStreetMaps.push(new OpenStreetMap2(element, __assign(__assign({}, JSON.parse(environment)), JSON.parse(override))));\n});\n"]}